===============================================================
FeedFetch v1.2 - INSTRUCTIONS
===============================================================

DESCRIPTION
---------------------------------------------------------------
FeedFetch is a self-contained Perl CGI script that retrieves and
displays RSS, Atom, or RDF news feeds in plain HTML format.

It runs entirely server-side — no external modules or frameworks
are required other than standard Perl libraries and optional
IO::Socket::SSL for HTTPS connections.

FeedFetch outputs each feed as a simple text list:
  <b>Feed Title</b>
  • Headline 1
  • Headline 2
  • ...

Each headline is a clickable link (opens in a new tab) and has
no underlines or surrounding boxes.  Colors, font, and bullet
style are configurable.

---------------------------------------------------------------
FILES INCLUDED
---------------------------------------------------------------
feedfetch.pl      - Main Perl CGI script
index.html        - Example HTML page displaying multiple feeds
INSTRUCTIONS.txt  - This documentation
CHANGELOG.txt     - Version history and technical changes

---------------------------------------------------------------
REQUIREMENTS
---------------------------------------------------------------
• Perl 5.x or newer
• Web server capable of running CGI scripts (e.g., Apache, lighttpd)
• The following Perl core modules (included by default):
    - Socket
    - IO::Socket::INET
    - URI::Escape
• Optional (for HTTPS feeds):
    - IO::Socket::SSL  (recommended but not mandatory)
• Optional (for compressed feeds):
    - IO::Uncompress::Gunzip
    - Compress::Raw::Zlib

FeedFetch does not use external dependencies like LWP::UserAgent
or XML::RSS — all network and XML parsing is handled internally.

---------------------------------------------------------------
INSTALLATION
---------------------------------------------------------------
1. Upload `feedfetch.pl` to a directory that allows CGI execution.
   Example:
      /home/username/public_html/news/feedfetch.pl

2. Make the script executable:
      chmod 755 feedfetch.pl

3. Ensure your server’s CGI handler is active for that directory.

4. Upload `index.html` to the same directory or a subfolder of
   your web root.

5. Confirm the script runs directly:
      https://yourserver/path/feedfetch.pl?url=https://example.com/feed

If successful, FeedFetch will display the latest headlines from
the given feed.

---------------------------------------------------------------
CONFIGURATION
---------------------------------------------------------------
All user-adjustable settings are at the top of `feedfetch.pl`.

# ---------------- CONFIGURATION ----------------
my $VERSION       = "1.2";
my $MAX_ITEMS     = 15;        # Number of headlines per feed
my $TIMEOUT       = 20;        # Network timeout (seconds)
my $MAX_REDIRECTS = 4;         # Max HTTP redirect depth
my $DEBUG         = 'N';       # Set to 'Y' or use ?debug=1 to enable

# Appearance
my $FONT_FAMILY   = "sans-serif";   # Body font
my $FONT_SIZE     = 10;             # Text size (pixels)
my $BG_COLOR      = "#FFFFFF";      # Background color
my $BULLET_STYLE  = "• ";           # Prefix before each link
my $LINK_COLOR    = "#0044AA";      # Normal link color
my $VISITED_COLOR = "#880088";      # Visited link color

---------------------------------------------------------------
USAGE
---------------------------------------------------------------
FeedFetch is typically called from an HTML page using iframes.

Example (from `index.html`):
---------------------------------------------------------------
<iframe
  src="./feedfetch.pl?url=https://rss.slashdot.org/slashdot/slashdotMain"
  style="width:33%; height:500px;"
  frameborder="0">
</iframe>
---------------------------------------------------------------

You may duplicate and modify these blocks for any RSS, Atom, or
RDF feed by changing the `url=` parameter.

FeedFetch automatically detects feed format and encoding:
• RSS 2.0 and 1.0
• Atom 1.0
• RDF XML
• Gzip or Deflate compression
• HTTP/HTTPS with redirects

---------------------------------------------------------------
DEBUG MODE
---------------------------------------------------------------
Set `$DEBUG = 'Y';` at the top of the script, or append `?debug=1`
to any feed URL for verbose diagnostic output.

Example:
   feedfetch.pl?url=https://www.wired.com/feed/rss&debug=1

This prints connection headers, encoding status, and parsing info.

---------------------------------------------------------------
ADDING / REMOVING FEEDS
---------------------------------------------------------------
To add a new feed:
1. Open `index.html` in a text editor.
2. Duplicate one of the existing <iframe> sections.
3. Replace the feed URL in the `url=` parameter.

Example:
   <iframe src="./feedfetch.pl?url=https://example.com/rss.xml"
           style="width:33%; height:500px;" frameborder="0"></iframe>

To remove a feed, simply delete its corresponding <iframe> block.

---------------------------------------------------------------
CUSTOMIZATION NOTES
---------------------------------------------------------------
• Set `$BULLET_STYLE` to an empty string ("") to remove bullets.
• Set `$LINK_COLOR` and `$VISITED_COLOR` to "#000000" for black
  links (no visual change from body text).
• Increase `$FONT_SIZE` for better readability.
• Adjust `width` and `height` in index.html if boxes are too large.
• `$MAX_ITEMS` limits the number of headlines per feed window.

---------------------------------------------------------------
TROUBLESHOOTING
---------------------------------------------------------------
• If you see “Internal Server Error”:
    - Check script permissions (chmod 755 feedfetch.pl)
    - Check Apache error log for details
• If “No data received” appears:
    - The remote feed may be offline or blocking connections.
    - Try loading the feed URL directly in a browser.
• If SSL feeds fail:
    - Install IO::Socket::SSL from your package manager:
        Slackware:   slackpkg install perl-io-socket-ssl
        Debian/Ubuntu:  apt install libio-socket-ssl-perl
        Fedora:      dnf install perl-IO-Socket-SSL

---------------------------------------------------------------
COMPATIBILITY
---------------------------------------------------------------
FeedFetch v1.2 is backward compatible with v1.0 and v1.1.
It retains all prior behavior and configuration variable names.
No output format changes were made other than color options.

---------------------------------------------------------------
LICENSE
---------------------------------------------------------------
Free for personal or public web use.  
No attribution required.  
Redistribution permitted if script remains unmodified.

===============================================================
End of INSTRUCTIONS
===============================================================
